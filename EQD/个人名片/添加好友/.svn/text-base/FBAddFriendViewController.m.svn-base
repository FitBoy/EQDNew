//
//  FBAddFriendViewController.m
//  YiQiDian
//
//  Created by 梁新帅 on 2017/2/23.
//  Copyright © 2017年 FitBoy. All rights reserved.
//

#import "FBAddFriendViewController.h"
#import <RongIMLib/RongIMLib.h>
#import <Contacts/Contacts.h>
#import "WebRequest.h"
#import "FBPeople.h"
@interface FBAddFriendViewController ()<UISearchBarDelegate,UITableViewDelegate,UITableViewDataSource>
{
    
    UISearchBar *searchBar;
    UITableView *tableV;
    NSMutableArray *arr_people;
    NSMutableArray *tarr;
}

@end

@implementation FBAddFriendViewController
-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self loadRequestData];
    self.navigationController.navigationBarHidden=NO;
}
-(void)loadRequestData{
    [self getContact];
    
    
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor =[UIColor whiteColor];
    self.title =@"添加易企点好友";

    arr_people = [NSMutableArray arrayWithCapacity:0];
    tarr = [NSMutableArray arrayWithCapacity:0];
    UIBarButtonItem *right =[[UIBarButtonItem alloc]initWithTitle:@"发送好友请求" style:UIBarButtonItemStylePlain target:self action:@selector(fasongClick)];
    [self.navigationItem setRightBarButtonItem:right];
    [self.view resignFirstResponder];
    searchBar =[[UISearchBar alloc]initWithFrame:CGRectMake(0, 64, DEVICE_WIDTH, 46)];
    [self.view addSubview:searchBar];
    searchBar.delegate=self;
    searchBar.placeholder=@"请输入对方的手机号添加好友";
    [searchBar becomeFirstResponder];
    tableV = [[UITableView alloc]initWithFrame:CGRectMake(0, 110, DEVICE_WIDTH, DEVICE_HEIGHT-110) style:UITableViewStylePlain];
    tableV.delegate=self;
    tableV.dataSource=self;
    [self.view addSubview:tableV];
    tableV.rowHeight=40;
}

-(void)getContact{
    [arr_people removeAllObjects];
    CNContactStore *store = [[CNContactStore alloc] init];
    [store requestAccessForEntityType:CNEntityTypeContacts completionHandler:^(BOOL granted, NSError * _Nullable error) {
        if (granted) {
            NSLog(@"授权成功");
            // 2. 获取联系人仓库
            CNContactStore * store = [[CNContactStore alloc] init];
            
            // 3. 创建联系人信息的请求对象
            NSArray * keys = @[CNContactGivenNameKey, CNContactFamilyNameKey, CNContactPhoneNumbersKey];
            
            // 4. 根据请求Key, 创建请求对象
            CNContactFetchRequest * request = [[CNContactFetchRequest alloc] initWithKeysToFetch:keys];
            
            // 5. 发送请求
            [store enumerateContactsWithFetchRequest:request error:nil usingBlock:^(CNContact * _Nonnull contact, BOOL * _Nonnull stop) {
                
                // 6.1 获取姓名
                NSString * givenName = contact.givenName;
                NSString * familyName = contact.familyName;
                
                FBPeople *person =[[FBPeople alloc]init];
                person.name = [NSString stringWithFormat:@"%@%@",familyName,givenName];
                
                // 6.2 获取电话
                
                if (contact.phoneNumbers>0) {
                    
                    for (CNLabeledValue * labelValue in contact.phoneNumbers) {
                        CNPhoneNumber * number = labelValue.value;
                        person.number =number.stringValue;
                        [arr_people addObject:person];
                        [tarr addObject:person];
                    }
                    
                }
                
                
                
            }];
        } else {
            NSLog(@"授权失败");
        }
        
        
        dispatch_async(dispatch_get_main_queue(), ^{
            [tableV reloadData];
        });
    }];

}

#pragma  mark - 表的数据源
-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
     [searchBar endEditing:YES];
}
-(void)viewWillDisappear:(BOOL)animated
{
    [searchBar endEditing:YES];
}
- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText{
    
    if (searchText.length==0) {
        [arr_people removeAllObjects];
        arr_people =[NSMutableArray arrayWithArray:tarr];
    }
    else{
        NSPredicate *predicate =[NSPredicate predicateWithFormat:@"number CONTAINS  %@",searchText];
        arr_people = [NSMutableArray arrayWithArray:[tarr filteredArrayUsingPredicate:predicate]];
        if(arr_people.count==0)
        {
            NSPredicate *predicate =[NSPredicate predicateWithFormat:@"name CONTAINS  %@",searchText];
            arr_people = [NSMutableArray arrayWithArray:[tarr filteredArrayUsingPredicate:predicate]];
        }
    }
    [tableV reloadData];
    
    
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return arr_people.count;
}
-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    static NSString *cellId=@"cellID";
    UITableViewCell *cell =[tableView dequeueReusableCellWithIdentifier:cellId];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:cellId];
        
    }
    FBPeople *person =arr_people[indexPath.row];
    cell.textLabel.text =person.name;
    cell.detailTextLabel.text = person.number;
    return cell;
}

#pragma  mark - 表的协议代理
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    FBPeople *person =arr_people[indexPath.row];
    searchBar.text =person.number;
    
}



-(void)fasongClick{
    NSLog(@"发送添加好友请求");
    [self.view endEditing:YES];
    
    if(searchBar.text.length>0)
    {
        
        [searchBar endEditing:YES];
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"请输入验证信息" message:nil preferredStyle:UIAlertControllerStyleAlert];
        [alert addTextFieldWithConfigurationHandler:^(UITextField * _Nonnull textField) {
            textField.placeholder = @"我是……(验证消息)";
        }];
        [alert addAction:[UIAlertAction actionWithTitle:@"确定发送" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            FBLoadingEffectView *teffectV =[[FBLoadingEffectView alloc]init];
            teffectV.L_title.text =@"正在发送";
            [self.view addSubview:teffectV];
            NSString *str = alert.textFields[0].text;
            NSString *userid =[USERDEFAULTS objectForKey:Y_Zhanghao];
            [WebRequest User_AddFriendWithuserid:userid friendid:searchBar.text content:str iphoto:nil And:^(NSDictionary *dic) {
                [teffectV cancelView];
                NSString *msg = dic[@"msg"];
                NSNumber *number = dic[@"status"];
                if ([number integerValue]==200) {
                    MBFadeAlertView *alert = [[MBFadeAlertView alloc]init];
                    [alert showAlertWith:@"发送邀请成功"];
                }
                else
                {
                    MBFadeAlertView *alert = [[MBFadeAlertView alloc]init];
                    [alert showAlertWith:msg];
                }
                
            }];
            [self.navigationController popToViewController:self.navigationController.viewControllers[0] animated:NO];
            
        }]];
        
        [alert addAction:[UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            
        }]];
        
        [self presentViewController:alert animated:NO completion:nil];
        
        
        
        
        
        
    }
    else
    {
        MBFadeAlertView *alert =[[MBFadeAlertView alloc]init];
        [alert showAlertWith:@"好友账号不能为空"];
    }
    
    
    
    
}


@end
